<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!--
        配置集中管理属性  我们可以直接使用该属性的value值
        格式： ${name}
     -->
    <property name="pattern" value="[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} %c %M %L [%thread] %m%n"></property>
    <!--
        日志输出格式：
          %-5level
          %d{yyyy-MM-dd HH:mm:ss.SSS}日期
          %c类的完整名称
          %M为method
          %L为行号
          %thread线程名称
          %m或者%msg为信息
          %n换行
      -->
    <!--定义保存路径的属性-->
    <property name="log_dir" value="log"></property>


    <!--  控制台日志输出的appender-->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <!--控制输出流对象 默认是 system.out 可以改为system.err-->
        <target>System.err</target>
        <!--日志消息格式的配置-->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${pattern}</pattern>
        </encoder>
    </appender>


    <!--向文件输出appender-->
    <appender name="file" class="ch.qos.logback.core.FileAppender">
        <!--日志文件的保存路径-->
        <file>${log_dir}/logback.log</file>
        <!--日志消息格式的配置-->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${pattern}</pattern>
        </encoder>
    </appender>


    <!--html格式日志文件输出 appender-->
    <appender name="htmlfile" class="ch.qos.logback.core.FileAppender">
        <!--日志文件的保存路径-->
        <file>${log_dir}/logback.html</file>
        <!--html日志消息格式的配置-->
        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <layout class="ch.qos.logback.classic.html.HTMLLayout">
                <!--日志消息格式的配置-->
                <pattern>%-5level%d{yyyy-MM-dd HH:mm:ss.SSS}%c%M%L%thread%m%n</pattern>
            </layout>
        </encoder>
    </appender>

    <!--日志拆分和归档压缩的 appender 对象-->
    <appender name="rollFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--日志文件的保存路径-->
        <file>${log_dir}/roll_logback.log</file>
        <!--日志消息格式的配置-->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${pattern}</pattern>
        </encoder>
        <!--指定拆分规则-->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--按照时间和压缩格式声明拆分的文件名-->
            <fileNamePattern>${log_dir}/rolling.%d{yyyy-MM-dd}.log%i.gz</fileNamePattern>
            <!--按照文件大小拆分-->
            <maxFileSize>1MB</maxFileSize>
        </rollingPolicy>
        <!--日志级别过滤器-->
        <!--<filter class="ch.qos.logback.classic.filter.LevelFilter">
            &lt;!&ndash;日志过滤规则&ndash;&gt;
            <level>info</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>-->
    </appender>

    <!--异步日志-->
    <appender name="async" class="ch.qos.logback.classic.AsyncAppender">
        <!--指定某个具体的apperder-->
        <appender-ref ref="rollFile"></appender-ref>
    </appender>



    <!--root logger 配置-->
    <root level="ALL">
        <appender-ref ref="console"/>
        <appender-ref ref="async"/>
    </root>

    <!--自定义logger对象  additivity="false" 是否继承我们的 root logger-->
    <!--<logger name="com.dhcc" level="info" additivity="false">
        <appender-ref ref="console"/>
    </logger>-->

</configuration>