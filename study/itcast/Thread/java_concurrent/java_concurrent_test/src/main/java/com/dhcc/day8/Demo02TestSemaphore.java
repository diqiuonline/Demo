package com.dhcc.day8;

import lombok.extern.slf4j.Slf4j;

import java.util.concurrent.Semaphore;

@Slf4j(topic = "c.Demo02TestSemaphore")
public class Demo02TestSemaphore {
    public static void main(String[] args) {
        //创建semaphore对象
        Semaphore semaphore = new Semaphore(3);
        // 10个线程同时运行
        for (int i = 0; i < 10; i++) {
            new Thread(()->{
                try {
                    semaphore.acquire();
                    log.debug("running....");
                    Thread.sleep(1000);
                    log.debug("end....");
                } catch (Exception e) {
                    throw new RuntimeException();
                }finally {
                    semaphore.release();
                }


            }).start();
        }
    }
}
/**
 * 21:55:07.315 [Thread-0] c.Demo02TestSemaphore - running....
 * 21:55:07.315 [Thread-1] c.Demo02TestSemaphore - running....
 * 21:55:07.315 [Thread-2] c.Demo02TestSemaphore - running....
 * 21:55:08.332 [Thread-0] c.Demo02TestSemaphore - end....
 * 21:55:08.332 [Thread-1] c.Demo02TestSemaphore - end....
 * 21:55:08.332 [Thread-2] c.Demo02TestSemaphore - end....
 * 21:55:08.332 [Thread-4] c.Demo02TestSemaphore - running....
 * 21:55:08.332 [Thread-3] c.Demo02TestSemaphore - running....
 * 21:55:08.332 [Thread-5] c.Demo02TestSemaphore - running....
 * 21:55:09.335 [Thread-5] c.Demo02TestSemaphore - end....
 * 21:55:09.335 [Thread-4] c.Demo02TestSemaphore - end....
 * 21:55:09.335 [Thread-8] c.Demo02TestSemaphore - running....
 * 21:55:09.335 [Thread-3] c.Demo02TestSemaphore - end....
 * 21:55:09.335 [Thread-6] c.Demo02TestSemaphore - running....
 * 21:55:09.335 [Thread-7] c.Demo02TestSemaphore - running....
 * 21:55:10.338 [Thread-6] c.Demo02TestSemaphore - end....
 * 21:55:10.338 [Thread-8] c.Demo02TestSemaphore - end....
 * 21:55:10.338 [Thread-9] c.Demo02TestSemaphore - running....
 * 21:55:10.338 [Thread-7] c.Demo02TestSemaphore - end....
 * 21:55:11.342 [Thread-9] c.Demo02TestSemaphore - end....
 */